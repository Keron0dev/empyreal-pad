import{jsx as _jsx}from"react/jsx-runtime";import{useEffect,useRef}from"react";import{addPropertyControls}from"framer";export default function Graineffect(){const canvasRef=useRef(null);const containerRef=useRef(null);useEffect(()=>{const canvas=canvasRef.current;const container=containerRef.current;if(!canvas||!container)return;const ctx=canvas.getContext("2d");if(!ctx)return;let noiseData=[];let frame=0;let loopTimeout;const createNoise=(w,h)=>{const idata=ctx.createImageData(w,h);const buffer32=new Uint32Array(idata.data.buffer);for(let i=0;i<buffer32.length;i++){const rand=Math.random();if(rand<.33)buffer32[i]=4278190080// black
;else if(rand<.66)buffer32[i]=4294967295// white
;// else transparent (leave as 0)
}noiseData.push(idata);};const paintNoise=()=>{if(noiseData.length>0){frame=(frame+1)%noiseData.length;ctx.putImageData(noiseData[frame],0,0);}};const loop=()=>{paintNoise();loopTimeout=window.setTimeout(()=>{requestAnimationFrame(loop);},1e3/25);};const setup=()=>{const w=container.offsetWidth;const h=container.offsetHeight;if(w===0||h===0)return;canvas.width=w;canvas.height=h;noiseData=[];for(let i=0;i<10;i++)createNoise(w,h);loop();};const resizeObserver=new ResizeObserver(()=>{clearTimeout(loopTimeout);setup();});resizeObserver.observe(container);setup();return()=>{resizeObserver.disconnect();clearTimeout(loopTimeout);};},[]);return /*#__PURE__*/_jsx("div",{ref:containerRef,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden"},children:/*#__PURE__*/_jsx("canvas",{ref:canvasRef,style:{position:"absolute",inset:0,width:"100%",height:"100%",pointerEvents:"none",zIndex:5,mixBlendMode:"screen"}})});}addPropertyControls(Graineffect,{});
export const __FramerMetadata__ = {"exports":{"default":{"type":"reactComponent","name":"Graineffect","slots":[],"annotations":{"framerContractVersion":"1"}},"__FramerMetadata__":{"type":"variable"}}}
//# sourceMappingURL=./Grain_effect.map