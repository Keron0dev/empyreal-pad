// Generated by Framer (e0edd7a)
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
  addFonts,
  cx,
  Link,
  RichText,
  SVG,
  useComponentViewport,
  useLocaleInfo,
  useVariantState,
  withCSS,
} from "framer";
import { LayoutGroup, motion, MotionConfigContext } from "framer-motion";
import * as React from "react";
import { useRef } from "react";
const enabledGestures = { TDwTvppIn: { hover: true } };
const serializationHash = "framer-c76gN";
const variantClassNames = { TDwTvppIn: "framer-v-1frzhxu" };
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach(
    (variant) => variant && Object.assign(nextOverrides, overrides[variant])
  );
  return nextOverrides;
}
const transition1 = { bounce: 0.2, delay: 0, duration: 0.4, type: "spring" };
const Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(
    () => ({ ...config, transition }),
    [JSON.stringify(transition)]
  );
  return /*#__PURE__*/ _jsx(MotionConfigContext.Provider, {
    value: contextValue,
    children: children,
  });
};
const Variants = motion.create(React.Fragment);
const getProps = ({ height, id, width, ...props }) => {
  return { ...props };
};
const createLayoutDependency = (props, variants) => {
  if (props.layoutDependency)
    return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
const Component = /*#__PURE__*/ React.forwardRef(function (props, ref) {
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const { style, className, layoutId, variant, ...restProps } = getProps(props);
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants,
  } = useVariantState({
    defaultVariant: "TDwTvppIn",
    enabledGestures,
    ref: refBinding,
    variant,
    variantClassNames,
  });
  const layoutDependency = createLayoutDependency(props, variants);
  const sharedStyleClassNames = [];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  return /*#__PURE__*/ _jsx(LayoutGroup, {
    id: layoutId ?? defaultLayoutId,
    children: /*#__PURE__*/ _jsx(Variants, {
      animate: variants,
      initial: false,
      children: /*#__PURE__*/ _jsx(Transition, {
        value: transition1,
        children: /*#__PURE__*/ _jsx(Link, {
          href: "https://github.com/empyrealapp",
          motionChild: true,
          nodeId: "TDwTvppIn",
          openInNewTab: true,
          scopeId: "D06w1YTSv",
          children: /*#__PURE__*/ _jsx(motion.a, {
            ...restProps,
            ...gestureHandlers,
            className: `${cx(
              scopingClassNames,
              "framer-1frzhxu",
              className,
              classNames
            )} framer-v0inb0`,
            "data-border": true,
            "data-framer-name": "Variant 1",
            layoutDependency: layoutDependency,
            layoutId: "TDwTvppIn",
            ref: refBinding,
            style: {
              "--border-bottom-width": "1px",
              "--border-color": "rgb(255, 255, 255)",
              "--border-left-width": "1px",
              "--border-right-width": "1px",
              "--border-style": "solid",
              "--border-top-width": "1px",
              backgroundColor: "rgba(0, 0, 0, 0)",
              ...style,
            },
            variants: {
              "TDwTvppIn-hover": { backgroundColor: "rgb(255, 255, 255)" },
            },
            ...addPropertyOverrides(
              { "TDwTvppIn-hover": { "data-framer-name": undefined } },
              baseVariant,
              gestureVariant
            ),
            children: /*#__PURE__*/ _jsxs(motion.div, {
              className: "framer-e24bye",
              "data-framer-name": "Frame 1089481",
              layoutDependency: layoutDependency,
              layoutId: "tpkmBx_Il",
              children: [
                /*#__PURE__*/ _jsx(RichText, {
                  __fromCanvasComponent: true,
                  children: /*#__PURE__*/ _jsx(React.Fragment, {
                    children: /*#__PURE__*/ _jsx(motion.p, {
                      style: {
                        "--font-selector": "R0Y7U3BhY2UgR3JvdGVzay1yZWd1bGFy",
                        "--framer-font-family":
                          '"Space Grotesk", "Space Grotesk Placeholder", sans-serif',
                        "--framer-font-size": "14px",
                        "--framer-line-height": "120%",
                        "--framer-text-color":
                          "var(--extracted-r6o4lv, rgb(255, 255, 255))",
                        "--framer-text-transform": "uppercase",
                      },
                      children: "Github",
                    }),
                  }),
                  className: "framer-1qtlmtu",
                  "data-framer-name": "Launch",
                  fonts: ["GF;Space Grotesk-regular"],
                  layoutDependency: layoutDependency,
                  layoutId: "auPdZvmve",
                  style: {
                    "--extracted-r6o4lv": "rgb(255, 255, 255)",
                    "--framer-paragraph-spacing": "0px",
                  },
                  verticalAlignment: "top",
                  withExternalLayout: true,
                  ...addPropertyOverrides(
                    {
                      "TDwTvppIn-hover": {
                        children: /*#__PURE__*/ _jsx(React.Fragment, {
                          children: /*#__PURE__*/ _jsx(motion.p, {
                            style: {
                              "--font-selector":
                                "R0Y7U3BhY2UgR3JvdGVzay1yZWd1bGFy",
                              "--framer-font-family":
                                '"Space Grotesk", "Space Grotesk Placeholder", sans-serif',
                              "--framer-font-size": "14px",
                              "--framer-line-height": "120%",
                              "--framer-text-transform": "uppercase",
                            },
                            children: "Github",
                          }),
                        }),
                      },
                    },
                    baseVariant,
                    gestureVariant
                  ),
                }),
                /*#__PURE__*/ _jsx(SVG, {
                  className: "framer-aq0r46",
                  "data-framer-name": "Vector",
                  layout: "position",
                  layoutDependency: layoutDependency,
                  layoutId: "DhG4wdVba",
                  opacity: 1,
                  svg: '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 15 14"><path d="M 8 2.3 L 6.933 2.3 L 6.495 1.862 L 6.495 0.833 L 6.933 0.395 L 8 0.395 L 8.438 0.833 L 8.438 1.862 L 8.876 2.3 L 9.943 2.3 L 10.381 2.738 L 10.381 3.766 L 10.819 4.204 L 11.885 4.204 L 12.323 4.642 L 12.323 5.671 L 12.761 6.109 L 13.828 6.109 L 14.266 6.547 L 14.266 7.576 L 13.828 8.014 L 12.761 8.014 L 12.323 8.452 L 12.323 9.481 L 11.885 9.919 L 10.819 9.919 L 10.381 10.357 L 10.381 11.385 L 9.943 11.823 L 8.876 11.823 L 8.438 12.261 L 8.438 13.29 L 8 13.728 L 6.933 13.728 L 6.495 13.29 L 6.495 12.261 L 6.933 11.823 L 8 11.823 L 8.438 11.385 L 8.438 10.357 L 8.876 9.919 L 9.943 9.919 L 10.381 9.481 L 10.381 8.452 L 9.943 8.014 L 1.076 8.014 L 0.667 7.605 L 0.667 6.519 L 1.076 6.109 L 9.944 6.109 L 10.382 5.671 L 10.382 4.642 L 9.944 4.204 L 8.877 4.204 L 8.439 3.766 L 8.439 2.738 L 8.001 2.3 Z M 10.82 8.014 L 11.886 8.014 L 12.324 7.576 L 12.324 6.547 L 11.886 6.109 L 10.82 6.109 L 10.382 6.547 L 10.382 7.576 Z" fill="rgb(255,255,255)"></path></svg>',
                  svgContentId: 11946810879,
                  withExternalLayout: true,
                  ...addPropertyOverrides(
                    {
                      "TDwTvppIn-hover": {
                        svg: '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 15 14"><path d="M 8 2.3 L 6.933 2.3 L 6.495 1.862 L 6.495 0.833 L 6.933 0.395 L 8 0.395 L 8.438 0.833 L 8.438 1.862 L 8.876 2.3 L 9.943 2.3 L 10.381 2.738 L 10.381 3.766 L 10.819 4.204 L 11.885 4.204 L 12.323 4.642 L 12.323 5.671 L 12.761 6.109 L 13.828 6.109 L 14.266 6.547 L 14.266 7.576 L 13.828 8.014 L 12.761 8.014 L 12.323 8.452 L 12.323 9.481 L 11.885 9.919 L 10.819 9.919 L 10.381 10.357 L 10.381 11.385 L 9.943 11.823 L 8.876 11.823 L 8.438 12.261 L 8.438 13.29 L 8 13.728 L 6.933 13.728 L 6.495 13.29 L 6.495 12.261 L 6.933 11.823 L 8 11.823 L 8.438 11.385 L 8.438 10.357 L 8.876 9.919 L 9.943 9.919 L 10.381 9.481 L 10.381 8.452 L 9.943 8.014 L 1.076 8.014 L 0.667 7.605 L 0.667 6.519 L 1.076 6.109 L 9.944 6.109 L 10.382 5.671 L 10.382 4.642 L 9.944 4.204 L 8.877 4.204 L 8.439 3.766 L 8.439 2.738 L 8.001 2.3 Z M 10.82 8.014 L 11.886 8.014 L 12.324 7.576 L 12.324 6.547 L 11.886 6.109 L 10.82 6.109 L 10.382 6.547 L 10.382 7.576 Z" fill="rgb(0, 0, 0)"></path></svg>',
                        svgContentId: 11433487843,
                      },
                    },
                    baseVariant,
                    gestureVariant
                  ),
                }),
              ],
            }),
          }),
        }),
      }),
    }),
  });
});
const css = [
  "@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
  ".framer-c76gN.framer-v0inb0, .framer-c76gN .framer-v0inb0 { display: block; }",
  ".framer-c76gN.framer-1frzhxu { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 8px; height: 32px; justify-content: flex-start; overflow: visible; padding: 8px 12px 8px 12px; position: relative; text-decoration: none; width: min-content; }",
  ".framer-c76gN .framer-e24bye { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10.666666984558105px; height: min-content; justify-content: flex-start; overflow: visible; padding: 0px; position: relative; width: min-content; }",
  ".framer-c76gN .framer-1qtlmtu { flex: none; height: auto; position: relative; white-space: pre; width: auto; }",
  ".framer-c76gN .framer-aq0r46 { flex: none; height: 14px; position: relative; width: 15px; }",
  '.framer-c76gN[data-border="true"]::after, .framer-c76gN [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }',
];
/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 32
 * @framerIntrinsicWidth 132
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["auto","fixed"]},"dD5Jz9G5t":{"layout":["auto","fixed"]}}}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerAutoSizeImages true
 * @framerComponentViewportWidth true
 * @framerColorSyntax true
 */ const FramerD06w1YTSv = withCSS(Component, css, "framer-c76gN");
export default FramerD06w1YTSv;
FramerD06w1YTSv.displayName = "Github";
FramerD06w1YTSv.defaultProps = { height: 32, width: 132 };
addFonts(
  FramerD06w1YTSv,
  [
    {
      explicitInter: true,
      fonts: [
        {
          family: "Space Grotesk",
          source: "google",
          style: "normal",
          url: "https://fonts.gstatic.com/s/spacegrotesk/v21/V8mQoQDjQSkFtoMM3T6r8E7mF71Q-gOoraIAEj7oUUsmNsFjTDJK.woff2",
          weight: "400",
        },
      ],
    },
  ],
  { supportsExplicitInterCodegen: true }
);
export const __FramerMetadata__ = {
  exports: {
    Props: { type: "tsType", annotations: { framerContractVersion: "1" } },
    default: {
      type: "reactComponent",
      name: "FramerD06w1YTSv",
      slots: [],
      annotations: {
        framerIntrinsicHeight: "32",
        framerDisplayContentsDiv: "false",
        framerAutoSizeImages: "true",
        framerCanvasComponentVariantDetails:
          '{"propertyName":"variant","data":{"default":{"layout":["auto","fixed"]},"dD5Jz9G5t":{"layout":["auto","fixed"]}}}',
        framerComponentViewportWidth: "true",
        framerIntrinsicWidth: "132",
        framerImmutableVariables: "true",
        framerColorSyntax: "true",
        framerContractVersion: "1",
      },
    },
    __FramerMetadata__: { type: "variable" },
  },
};
//# sourceMappingURL=./D06w1YTSv.map
